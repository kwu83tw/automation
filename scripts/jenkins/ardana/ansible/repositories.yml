---
- name: Setup repositories on the deployer node
  hosts: hosts
  gather_facts: False

  vars:
    clouddata_server: provo-clouddata.cloud.suse.de
    download_suse_server: download.suse.de
    cloudsource: SUSE-OpenStack-Cloud-8-devel-staging
    repositories: SLES12-SP3-Pool,SLES12-SP3-Updates
    arch: x86_64
    repos_url: "http://{{ clouddata_server }}/repos/{{ arch }}"
    cloudsource_url: "{{ repos_url }}/{{ cloudsource }}"
    sshpass_repo: "http://download.suse.de/ibs/QA:/SLE12SP3/update/"

  tasks:

  - name: Parse repositories
    set_fact:
      repos_dict: "{{ repos_dict|default({})|combine({item: item}) }}"
    with_items: "{{ repositories.split(',')|unique|list }}"

  - name: Add Cloud to repository list
    set_fact:
      # Use a consistent name for the Cloud media install repo so that we
      # don't have to account for development versus production repos in the
      # playbooks
      repos_dict: "{{ {'Cloud': cloudsource}|combine(repos_dict) }}"
    when: cloudsource != ''

  - name: Check srv directories
    stat:
      path: "/srv/www/suse-12.3/x86_64/repos/{{ item.key }}"
    register: srv_dir_stats
    with_dict: "{{ repos_dict }}"

  - name: Create srv directories
    file:
      state: directory
      path: "/srv/www/suse-12.3/x86_64/repos/{{ item.item.key }}"
      mode: 0755
    when: not item.stat.exists
    with_items:
      - "{{ srv_dir_stats.results }}"

  - name: Unmount the Cloud repo, if cloudsource was changed
    mount:
      state: unmounted
      name: /srv/www/suse-12.3/x86_64/repos/Cloud
    when: cloudsource != ''

  - name: Mount zypper repos
    mount:
      state: mounted
      fstype: nfs
      opts: ro,nosuid,rsize=8192,wsize=8192,hard,intr,nolock,x-systemd.automount,noauto
      name: /srv/www/suse-12.3/x86_64/repos/{{ item.item.key }}
      src: "{{ clouddata_server }}:/srv/nfs/repos/x86_64/{{ item.item.value }}"
    with_items:
      - "{{ srv_dir_stats.results }}"

  - name: Add zypper repos
    zypper_repository:
      repo: "/srv/www/suse-12.3/x86_64/repos/{{ item.item.value }}"
      name: "{{ item.item.key }}"
    register: added_repos
    when: item.item.key != 'Cloud'
    with_items:
      - "{{ srv_dir_stats.results }}"

  # Need to add Cloud repo as repo-md not as the default "yast2" type as that
  # one refuses to install packages if the media build number changes
  - name: Add Cloud repo
    shell: |
      zypper -n lr Cloud || zypper -n ar -c -K -f -t rpm-md /srv/www/suse-12.3/x86_64/repos/Cloud Cloud
    when: cloudsource != ''

  - name: Repo for sshpass
    zypper_repository:
      repo: "{{ sshpass_repo }}"
      name: sshpass

  # Refresh all repos
  - name: Refresh zypper repositories
    zypper_repository:
      repo: '*'
      auto_import_keys: yes
      runrefresh: yes

  - name: Install sshpass
    zypper:
      name: 'sshpass'
      state: present

  - name: Remove Repo for sshpass
    zypper_repository:
      repo: "{{ sshpass_repo }}"
      name: sshpass
      state: absent

  - name: Install ardana pattern
    zypper:
      name: "patterns-cloud-ardana"
      state: present

  # This can't happen earlier because we rely on the ardana pattern for creating
  # the ardana user/group
  - name: Ensure /etc/ardana exists
    file:
      path: /etc/ardana
      state: directory
      owner: ardana
      group: ardana

  - name: Capture build number of cloudsource media
    get_url:
      url: "{{ cloudsource_url }}/media.1/build"
      dest: /etc/ardana/media-build-version
    when: cloudsource != ''

  - name: Add build information to /etc/motd
    shell: |
      echo "Build job:  {{ build_url }}" >>/etc/motd

  - name: Add cloudsource information to /etc/motd
    shell: |
      media_build_version=$(cat /etc/ardana/media-build-version)
      echo "Built from: {{ cloudsource_url }}" >>/etc/motd
      echo "Media build version: $media_build_version" >>/etc/motd
    when: cloudsource != ''

  - name: Add repos information to /etc/motd
    shell: |
      echo "Configured repositories: {{ repositories }}" >>/etc/motd
    when: repositories != ''
